name: 'dev_infra_pipeline'

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_RESOURCE_GROUP: medx_base
  AZURE_LOCATION: eastus
  AZURE_STORAGE_ACCOUNT: bootstrapdev0001
  AZURE_CONTAINER_NAME: terraform

jobs:
  bootstrapping:
    name: 'Bootstrapping'
    runs-on: ubuntu-latest

    steps:   
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIAL }}
    
    - name: Create Resource Group (if not exists)
      run: |
        if ! az group show --name $AZURE_RESOURCE_GROUP &> /dev/null; then
          az group create --name $AZURE_RESOURCE_GROUP --location $AZURE_LOCATION
        else
          echo "Resource group $AZURE_RESOURCE_GROUP already exists"
        fi

    - name: Create Storage Account (if not exists)
      run: |
        if ! az storage account show --name $AZURE_STORAGE_ACCOUNT --resource-group $AZURE_RESOURCE_GROUP &> /dev/null; then
          az storage account create --resource-group $AZURE_RESOURCE_GROUP --name $AZURE_STORAGE_ACCOUNT --sku Standard_LRS --encryption-services blob --kind StorageV2
        else
          echo "Storage account $AZURE_STORAGE_ACCOUNT already exists"
        fi

    - name: Create Storage Container (if not exists)
      run: |
        if ! az storage container show --name $AZURE_CONTAINER_NAME --account-name $AZURE_STORAGE_ACCOUNT &> /dev/null; then
          az storage container create --account-name $AZURE_STORAGE_ACCOUNT --name $AZURE_CONTAINER_NAME
        else
          echo "Storage container $AZURE_CONTAINER_NAME already exists"
        fi

  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: bootstrapping

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      run: |
        cd env/dev/deploy
        terraform init

    - name: Terraform Plan
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      run: |
        cd env/dev/deploy
        terraform plan -out=tfplan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      run: |
        cd env/dev/deploy
        terraform apply -auto-approve tfplan
